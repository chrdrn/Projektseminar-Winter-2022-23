---
title: "Projektseminar"
title-slide-attributes:
  data-background-image: ../../../images/background_dark_red.svg
  data-background-size: cover
  data-background-opacity: ".5"
  data-background-color: "#041E42"
subtitle: "Datenaufbereitung I"
author: 
  - name: Julius Klingelhoefer 
    url: https://twitter.com/klingelhoefer_j/
    affiliation: Juniorprofessur f√ºr Kommunikationswissenschaft
    affiliation-url: https://www.kommunikationswissenschaft.rw.fau.de/julius-klingelhoefer/
#date: 
#date-format: "DD.MM.YYYY"
format:
  revealjs:
    width: 1929
    height: 1080
    menu: false
    toc: true
    toc-depth: 1
    toc-title: "Inhalt"
    auto-animate-duration: 0.5
    auto-animate-easing: ease-in-out
    transition: slide
    background-transition: fade
    transition-speed: fast
    theme: ../../slidetheme.scss
    #template-partials:
    slide-number: c
    chalkboard:
      buttons: false
      theme: whiteboard
    preview-links: auto
    logo: ../../../images/logo.svg
    #footer: "[Projektseminar 22/23](https://github.com/klingelhoefer/Projektseminar-Winter-2022-23)"
comments:
  hypothesis: 
    theme: clean
execute:
  echo: true
filters: 
  - ../../bg_style.lua
bibliography: references.bib
csl: ../../apa.csl
editor_options: 
  chunk_output_type: console
---

# Housekeeping

**üßπ**

```{r setup}
#| echo: false

# installing and activating required packages 
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, dplyr, janitor, renv, readxl, haven, lme4)
```

## Neuerungen

Mehr Abwechslung und Interaktivit√§t: R-√úbungselemte schon in den Vortrag:

-   Kleinere Arbeitsphasen w√§hrend des Vortrags

-   √úberarbeitungen aus der Sitzung sind Grundlage f√ºr die anschlie√üenden Arbeitsauftr√§ge

## RStudio Server

-   Weiterhin Nutzung des RStudio Servers m√∂glich (au√üer Mittwochs) Erreichbar unter: http://131.188.248.179:8787\](http://131.188.248.179:8787

-   **nur via VPN** erreichbar

-   Bitte nutzen Sie Ihren (alten) pers√∂nlichen Login

# Datenaufbereitung

Von Rohdaten bis zur Analyse

import ‚û°Ô∏è tidy ‚û°Ô∏è transform ‚û°Ô∏è repeat

## Prozess der Datenaufbereitung

::: columns
::: {.column width="50%"}
Die **Aufbereitung** nimmt in der Regel den Gro√üteil der Zeit in Anspruch

H√§ufig mehrfache **Wiederholung** dreier Schritte:

-   (explorative) **Erkundung**

-   **Standardisierung**

-   (erneute) **Bereinung** der Daten
:::

::: {.column width="50%"}
### Typische Pipeline:

![](https://d33wubrfki0l68.cloudfront.net/795c039ba2520455d833b4034befc8cf360a70ba/558a5/diagrams/data-science-explore.png){width="100%"}

@wickham2016
:::
:::

# Datenstruktur(en)

Zusammenf√ºgen von Datens√§tzen

import ‚ûï bind ‚ûï join ‚ûï merge

## St√§rke von R: Umgang mit Daten

-   Ein Bereich, in dem R wirklich gl√§nzt, ist die F√§higkeit mit mehreren und verschiedenen Datenquellen (gleichzeitig) zu arbeiten

-   R verf√ºgt √ºber eine Reihe an Paketen f√ºr den Import, die Transformation sowie die Bearbeitung verschiedenster Datenquellen

## Datenimport in R {auto-animate="true"}

Einer der ersten Arbeitschritte ist der Import externer Daten in R. Daf√ºr gibt es neben der Base R-Funktionen eine Vielzahl an verschiedenen Paketen:

-   `haven` - SPSS, Stata, and SAS files

-   `DBI` - databases

-   `jsonlite` - json

-   `xml2` - XML

-   `httr` - Web APIs

-   `rvest` - HTML (Web Scraping)

-   `readr::read_lines()` - text data

-   ...

## Datenimport in R {auto-animate="T"}

-   ...

**Grunds√§tzlich gilt**

-   Je "einfacher" die Formatierung der Daten, desto weniger komplex ist der Import.

-   Import von Textdatein (`.csv`) i.d.R. einfacher und ohne gr√∂√üere Komplikationen.

-   Andere Dateienformate (`.sav`) k√∂nnen Vorz√ºge haben (z.B. Variable- und Value Labels), die den potentiellen Mehraufwand beim Import rechtfertigen.

## Arten der Zusammenf√ºhrung

-   Drei grunds√§tzliche M√∂glichkeiten, Datens√§tze zu verbinden:

    <div>

    -   Addition zus√§tzlicher **Variablen** f√ºr bestehende F√§lle

    -   Addition zus√§tzlicher **F√§lle** f√ºr bestehende Variablen

    -   Addition zu√§tzlicher **Variablen & F√§lle**

    </div>

F√ºr alle M√∂glichkeiten gibt es sowohl simple (z.B. durch die `bind_`-Funktionen), aber auch komplexere L√∂sungen (z.B. die `_join`-Funktionen)[^1].

[^1]: Quelle der folgenden Unterabschnitte: @positsoftware2021, dplyr cheat sheet, CC BY SA

## `bind_cols()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x

[A]{.square_darkgrey data-id="box_1"} [B]{.square_darkgrey data-id="box_2"} [C]{.square_darkgrey data-id="box_3"}

[a]{.square_lightgrey data-id="box_4"} [t]{.square_lightgrey data-id="box_5"} [1]{.square_lightgrey data-id="box_6"}

[b]{.square_lightgrey data-id="box_7"} [u]{.square_lightgrey data-id="box_8"} [2]{.square_lightgrey data-id="box_9"}

[c]{.square_lightgrey data-id="box_10"} [v]{.square_lightgrey data-id="box_11"} [3]{.square_lightgrey data-id="box_12"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
y

[E]{.square_darkblue data-id="box_13"} [F]{.square_darkblue data-id="box_14"} [G]{.square_darkblue data-id="box_15"}

[a]{.square_lightblue data-id="box_16"} [t]{.square_lightblue data-id="box_17"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightblue data-id="box_19"} [u]{.square_lightblue data-id="box_20"} [2]{.square_lightblue data-id="box_21"}

[d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [1]{.square_lightblue data-id="box_24"}
:::
:::

## `bind_cols()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x & y

[A]{.square_darkgrey data-id="box_1"} [B]{.square_darkgrey data-id="box_2"} [C]{.square_darkgrey data-id="box_3"} [E]{.square_darkblue data-id="box_13"} [F]{.square_darkblue data-id="box_14"} [G]{.square_darkblue data-id="box_15"}

[a]{.square_lightgrey data-id="box_4"} [t]{.square_lightgrey data-id="box_5"} [1]{.square_lightgrey data-id="box_6"} [a]{.square_lightblue data-id="box_16"} [t]{.square_lightblue data-id="box_17"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightgrey data-id="box_7"} [u]{.square_lightgrey data-id="box_8"} [2]{.square_lightgrey data-id="box_9"} [b]{.square_lightblue data-id="box_19"} [u]{.square_lightblue data-id="box_20"} [2]{.square_lightblue data-id="box_21"}

[c]{.square_lightgrey data-id="box_10"} [v]{.square_lightgrey data-id="box_11"} [3]{.square_lightgrey data-id="box_12"} [d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [1]{.square_lightblue data-id="box_24"}
:::
:::

-   **Um Variablen zu kombinieren**

-   z.B. Pre- und post-exposure Messungen bei einem Experiment.

## `bind_rows()` {auto-animate="T"}

::: columns
::: {.column width="50%"}
x

[ID]{.square_darkgrey data-id="boxThree1"} [B]{.square_darkgrey data-id="boxThree2"} [C]{.square_darkgrey data-id="boxThree3"}

[a]{.square_lightgrey data-id="boxThree4"} [t]{.square_lightgrey data-id="boxThree5"} [1]{.square_lightgrey data-id="boxThree6"}

[b]{.square_lightgrey data-id="boxThree7"} [u]{.square_lightgrey data-id="boxThree8"} [2]{.square_lightgrey data-id="boxThree9"}
:::

::: {.column width="50%"}
y

[ID]{.square_darkblue data-id="boxThree13"} [B]{.square_darkblue data-id="boxThree14"} [D]{.square_darkblue data-id="boxThree15"}

[c]{.square_lightblue data-id="boxThree19"} [v]{.square_lightblue data-id="boxThree20"} [3]{.square_lightblue data-id="boxThree21"}

[d]{.square_lightblue data-id="boxThree22"} [w]{.square_lightblue data-id="boxThree23"} [4]{.square_lightblue data-id="boxThree24"}
:::
:::

## `bind_rows()` {auto-animate="T"}

x & y

::: columns
::: {.column width="50%" style="color: white;"}
\_ [ID]{.square_darkgrey data-id="boxThree1"} [B]{.square_darkgrey data-id="boxThree2"} [C]{.square_darkgrey data-id="boxThree3"}

\_ [a]{.square_lightgrey data-id="boxThree4"} [t]{.square_lightgrey data-id="boxThree5"} [1]{.square_lightgrey data-id="boxThree6"}

\_ [b]{.square_lightgrey data-id="boxThree7"} [u]{.square_lightgrey data-id="boxThree8"} [2]{.square_lightgrey data-id="boxThree9"}

\_ [c]{.square_lightblue data-id="boxThree19"} [v]{.square_lightblue data-id="boxThree20"} [3]{.square_lightblue data-id="boxThree21"}

\_ [d]{.square_lightblue data-id="boxThree22"} [w]{.square_lightblue data-id="boxThree23"} [4]{.square_lightblue data-id="boxThree24"}
:::

::: {.column width="50%"}
:::
:::

## "Komplexeres" zusammenf√ºgen

<div>

-   Neben "Anh√§ngen" gibt es "intelligentere*"* Varianten, Datens√§tze zusammenzuf√ºhren,

-   z.B. durch einen **gemeinsamen Schl√ºssel**

    -   = Variable, die F√§lle in einem Datensatz mit einem anderen verbindet

    -   Meist existiert daf√ºr eine ID-Variable

    -   z.B. f√ºr jede/n Teilnehmer\*in in jedem Datensatz.

-   M√∂glichkeiten der Verkn√ºpfung unterscheiden sich bez√ºglich des Umgangs mit unterschiedlichen Werten im gemeinsamen Schl√ºssel

-   **Varianten**:

    ::: incremental
    -   Left Join

    -   Right Join

    -   Inner Join

    -   Full Join
    :::

</div>

## √úbersicht

![](https://cdn.mindmajix.com/blog/images/db-01_2119.png)

Source: @db-0121

## `left_join()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x

[ID]{.square_darkgrey data-id="1_box_1"} [B]{.square_darkgrey data-id="1_box_2"} [C]{.square_darkgrey data-id="1_box_3"}

[a]{.square_lightgrey data-id="1_box_4"} [t]{.square_lightgrey data-id="1_box_5"} [1]{.square_lightgrey data-id="1_box_6"}

[b]{.square_lightgrey data-id="1_box_7"} [u]{.square_lightgrey data-id="1_box_8"} [2]{.square_lightgrey data-id="1_box_9"}

[c]{.square_lightgrey data-id="1_box_10"} [v]{.square_lightgrey data-id="1_box_11"} [3]{.square_lightgrey data-id="1_box_12"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
y

[ID]{.square_darkblue data-id="1_box_13"} [B]{.square_darkblue data-id="1_box_14"} [D]{.square_darkblue data-id="1_box_15"}

[a]{.square_lightblue data-id="1_box_16"} [t]{.square_lightblue data-id="1_box_17"} [3]{.square_lightblue data-id="1_box_18"}

[b]{.square_lightblue data-id="1_box_19"} [u]{.square_lightblue data-id="1_box_20"} [2]{.square_lightblue data-id="1_box_21"}

[d]{.square_lightblue data-id="1_box_22"} [w]{.square_lightblue data-id="1_box_23"} [1]{.square_lightblue data-id="1_box_24"}
:::
:::

## `left_join()` {auto-animate="T"}

<div>

::: columns
::: {.column width="auto"}
x & y

[ID]{.square_darkgrey data-id="1_box_1"} [B]{.square_darkgrey data-id="1_box_2"} [C]{.square_darkgrey data-id="1_box_3"} [D]{.square_darkblue data-id="1_box_15"}

[a]{.square_lightblue data-id="1_box_16"} [t]{.square_lightgrey data-id="1_box_5"} [1]{.square_lightgrey data-id="1_box_6"} [3]{.square_lightblue data-id="1_box_18"}

[b]{.square_lightblue data-id="1_box_19"} [u]{.square_lightgrey data-id="1_box_8"} [2]{.square_lightgrey data-id="1_box_9"} [2]{.square_lightblue data-id="1_box_21"}

[c]{.square_lightgrey data-id="1_box_10"} [v]{.square_lightgrey data-id="1_box_11"} [3]{.square_lightgrey data-id="1_box_12"}
:::

::: {.column width="40%"}
:::
:::

</div>

## `left_join()` {auto-animate="T" auto-animate-unmatched="F"}

<div>

::: columns
::: {.column width="auto"}
x & y

[ID]{.square_darkgrey data-id="1_box_1"} [B]{.square_darkgrey data-id="1_box_2"} [C]{.square_darkgrey data-id="1_box_3"} [D]{.square_darkblue data-id="1_box_15"}

[a]{.square_lightblue data-id="1_box_16"} [t]{.square_lightgrey data-id="1_box_5"} [1]{.square_lightgrey data-id="1_box_6"} [3]{.square_lightblue data-id="1_box_18"}

[b]{.square_lightblue data-id="1_box_19"} [u]{.square_lightgrey data-id="1_box_8"} [2]{.square_lightgrey data-id="1_box_9"} [2]{.square_lightblue data-id="1_box_21"}

[c]{.square_lightgrey data-id="1_box_10"} [v]{.square_lightgrey data-id="1_box_11"} [3]{.square_lightgrey data-id="1_box_12"} [NA]{.square_white data-id=""}
:::

::: {.column width="40%"}
:::
:::

</div>

-   Erh√§lt alle einzigartigen F√§lle (ID) des linken/ersten Datensatzes

-   **Nicht** die einzigartigen F√§lle des rechten Datensatzes

-   Fehlende Variablen werden zu NAs

## `right_join()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x

[ID]{.square_darkgrey data-id="box_1"} [B]{.square_darkgrey data-id="box_2"} [C]{.square_darkgrey data-id="box_3"}

[a]{.square_lightgrey data-id="box_4"} [t]{.square_lightgrey data-id="box_5"} [1]{.square_lightgrey data-id="box_6"}

[b]{.square_lightgrey data-id="box_7"} [u]{.square_lightgrey data-id="box_8"} [2]{.square_lightgrey data-id="box_9"}

[c]{.square_lightgrey data-id="box_10"} [v]{.square_lightgrey data-id="box_11"} [3]{.square_lightgrey data-id="box_12"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
y

[ID]{.square_darkblue data-id="box_13"} [B]{.square_darkblue data-id="box_14"} [D]{.square_darkblue data-id="box_15"}

[a]{.square_lightblue data-id="box_16"} [t]{.square_lightblue data-id="box_17"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightblue data-id="box_19"} [u]{.square_lightblue data-id="box_20"} [2]{.square_lightblue data-id="box_21"}

[d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [1]{.square_lightblue data-id="box_24"}
:::
:::

## `right_join()` {auto-animate="T"}

::: columns
::: {.column width="40%"}
:::

::: {.column width="auto"}
x & y

[ID]{.square_darkblue data-id="box_13"} [B]{.square_darkblue data-id="box_14"} [C]{.square_darkgrey data-id="box_3"} [D]{.square_darkblue data-id="box_15"}

[a]{.square_lightgrey data-id="box_4"} [t]{.square_lightblue data-id="box_17"} [1]{.square_lightgrey data-id="box_6"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightgrey data-id="box_7"} [u]{.square_lightblue data-id="box_20"} [2]{.square_lightgrey data-id="box_9"} [2]{.square_lightblue data-id="box_21"}

[d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [NA]{.square_white data-id=""} [1]{.square_lightblue data-id="box_24"}
:::
:::

-   Identisch zu left_join, nur "rechts"

## `inner_join()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x

[ID]{.square_darkgrey data-id="boxTwo1"} [B]{.square_darkgrey data-id="boxTwo2"} [C]{.square_darkgrey data-id="boxTwo3"}

[a]{.square_lightgrey data-id="boxTwo4"} [t]{.square_lightgrey data-id="boxTwo5"} [1]{.square_lightgrey data-id="boxTwo6"}

[b]{.square_lightgrey data-id="boxTwo7"} [u]{.square_lightgrey data-id="boxTwo8"} [2]{.square_lightgrey data-id="boxTwo9"}

[c]{.square_lightgrey data-id="boxTwo10"} [v]{.square_lightgrey data-id="boxTwo11"} [3]{.square_lightgrey data-id="boxTwo12"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
y

[ID]{.square_darkblue data-id="boxTwo13"} [B]{.square_darkblue data-id="boxTwo14"} [D]{.square_darkblue data-id="boxTwo15"}

[a]{.square_lightblue data-id="boxTwo16"} [t]{.square_lightblue data-id="boxTwo17"} [3]{.square_lightblue data-id="boxTwo18"}

[b]{.square_lightblue data-id="boxTwo19"} [u]{.square_lightblue data-id="boxTwo20"} [2]{.square_lightblue data-id="boxTwo21"}

[d]{.square_lightblue data-id="boxTwo22"} [w]{.square_lightblue data-id="boxTwo23"} [1]{.square_lightblue data-id="boxTwo24"}
:::
:::

## `inner_join()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x & y

[ID]{.square_darkgrey data-id="boxTwo1"} [B]{.square_darkgrey data-id="boxTwo2"} [C]{.square_darkgrey data-id="boxTwo3"} [D]{.square_darkblue data-id="boxTwo15"}

[a]{.square_lightblue data-id="boxTwo16"} [t]{.square_lightgrey data-id="boxTwo5"} [1]{.square_lightgrey data-id="boxTwo6"} [3]{.square_lightblue data-id="boxTwo18"}

[b]{.square_lightblue data-id="boxTwo19"} [u]{.square_lightgrey data-id="boxTwo8"} [2]{.square_lightgrey data-id="boxTwo9"} [2]{.square_lightblue data-id="boxTwo21"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
:::
:::

-   Es werden nur IDs behalten, die in beiden Datens√§tzen existieren

## `full_join()` {auto-animate="T"}

::: columns
::: {.column width="auto"}
x

[ID]{.square_darkgrey data-id="box_1"} [B]{.square_darkgrey data-id="box_2"} [C]{.square_darkgrey data-id="box_3"}

[a]{.square_lightgrey data-id="box_4"} [t]{.square_lightgrey data-id="box_5"} [1]{.square_lightgrey data-id="box_6"}

[b]{.square_lightgrey data-id="box_7"} [u]{.square_lightgrey data-id="box_8"} [2]{.square_lightgrey data-id="box_9"}

[c]{.square_lightgrey data-id="box_10"} [v]{.square_lightgrey data-id="box_11"} [3]{.square_lightgrey data-id="box_12"}
:::

::: {.column width="40%"}
:::

::: {.column width="auto"}
y

[ID]{.square_darkblue data-id="box_13"} [B]{.square_darkblue data-id="box_14"} [D]{.square_darkblue data-id="box_15"}

[a]{.square_lightblue data-id="box_16"} [t]{.square_lightblue data-id="box_17"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightblue data-id="box_19"} [u]{.square_lightblue data-id="box_20"} [2]{.square_lightblue data-id="box_21"}

[d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [1]{.square_lightblue data-id="box_24"}
:::
:::

## `full_join()` {auto-animate="T"}

::: columns
::: {.column width="40%"}
x & y

[ID]{.square_darkgrey data-id="box_1"} [B]{.square_darkgrey data-id="box_2"} [C]{.square_darkgrey data-id="box_3"} [D]{.square_darkblue data-id="box_15"}

[a]{.square_lightblue data-id="box_16"} [t]{.square_lightgrey data-id="box_5"} [1]{.square_lightgrey data-id="box_6"} [3]{.square_lightblue data-id="box_18"}

[b]{.square_lightblue data-id="box_19"} [u]{.square_lightgrey data-id="box_8"} [2]{.square_lightgrey data-id="box_9"} [2]{.square_lightblue data-id="box_21"}

[c]{.square_lightgrey data-id="box_10"} [v]{.square_lightgrey data-id="box_11"} [3]{.square_lightgrey data-id="box_12"} [NA]{.square_white data-id=""}

[d]{.square_lightblue data-id="box_22"} [w]{.square_lightblue data-id="box_23"} [NA]{.square_white data-id=""} [1]{.square_lightblue data-id="box_24"}
:::

::: {.column width="auto"}
:::
:::

-   **Alle** Werte und Reihen werden erhalten

# Aufgabe 1

1.  Lesen Sie zwei Datens√§tze aus dem Ordner `data` ein:

    -   `Momentary_Disco!+NO+LOGGING_20221020T113348+0200.xlsx`

    -   `momentary_disco_WITH_logging_20221020T113642+0200.xlsx`

    -   a\) Welche Funktion nutzen Sie zum einlesen?

2.  Vereinheitlichen Sie die Variablennamen mit `janitor::clean_names()`

3.  Untersuchen Sie Variablen der Datens√§tze mit `glimpse()` mit `sjmisc::frq()`

    a.  Was stellen Sie fest?

# L√∂sung 1

**‚ö†Ô∏è Erst nach der Bearbeitung weiterklicken! ‚ö†Ô∏è**

## Einlesen

```{r read}
# Importing data from the version **without** logging
d_log_f = read_excel("../../../pretest/data/Momentary_Disco!+NO+LOGGING_20221020T113348+0200.xlsx")

# Importing data from the version **with** logging
d_log_t = read_excel("../../../pretest/data/momentary_disco_WITH_logging_20221020T113642+0200.xlsx")

colnames(d_log_t)
```

## `clean_names()`

::: columns
::: {.column width="50%"}
```{r}
colnames(
  d_log_t
  )
```
:::

::: {.column width="50%"}
```{r}
d_log_t = d_log_t %>%
  clean_names() # tidy names
colnames(d_log_t)
```
:::
:::

## Taking a `glimpse()`

```{r}
#| eval: false
d_log_t %>% glimpse()

sjmisc::frq(d_log_t$form)
```

# Datenbereinigung

**Von Rohdaten zu konsistenten Daten**

üëÄ missing üíØ extremwerte üìè straightlining

## Stufen der Datenqualit√§t

::: columns
::: {.column width="66%"}
-   Ziel der Datenbereingiung ist die Steigerung der Datenqualit√§t

-   Der Prozess umfasst mehrere Schritte

-   Teilweise mehrfach wiederholt

-   Gelingt nur durch eine aktive Auseinandersetzung mit den Daten
:::

::: {.column width="33%"}
![@dejonge](../../../images/02_pre_processing_chain.jpg)
:::
:::

# Literature
